server.servlet.context-path=/

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

server.port = 8080
#devtool 설정
spring.devtools.livereload.enabled=true



###################################################################################
# HikariCP란?
#1) Spring Boot 2.0 이전 : Tomcat JDBC Connection Pool를 Default로 사용하였다.
#2) Spring Boot 2.0 이후 : HikariCP를 Default로 사용하고 있다.
#3) hikariCP github사이트에서는 매우 빠르고, 가볍고, 신뢰할 수 있다고 설명한다.
#4) "zero-overhead" 엄청나게 높은 성능이라고 강조하며 tomcat, dbcp 등과의 성능 비교 결과도 첨부하고 있다.
###################################################################################

#mariaDB 접속 설정
# datasource config
# hikari 미사용 설정할때
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://127.0.0.1:3306/study?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
# spring.datasource.username=root
# spring.datasource.password=badboy5604
# hikari 로 설정할때
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://127.0.0.1:3306/study?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.hikari.username=root
spring.datasource.hikari.password=badboy5604
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-test-query=SELECT 1
##
###################################################################################
# mybatis 매핑 type을 짧게 쓰기 위한 설정 
# mapper.xml에서 resultType을 지정할 때 com.god.bo.test.vo.TestVo 대신 TestVo로 간략히 할 수 있다. 
# mybatis.type-aliases-package=com.god.bo.test.vo 
# mapper.xml 위치 지정 
# **은 하위 폴더 레벨에 상관없이 모든 경로를 뜻하며, *는 아무 이름이나 와도 된다는것을 뜻합니다. 
# mybatis.mapper-locations=mybatis/**/*.xml
#####################################################################################

# mybatis
mybatis.type-aliases-package=com.example.demo.dto
mybatis.mapper-locations=classpath:static/mappers/*Mapper.xml
